<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Diary of a Developer</title>
    <description>A blog following my journey through makers academy and beyond...
</description>
    <link>http://natstar93.github.io//</link>
    <atom:link href="http://natstar93.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 10 Jun 2015 16:59:09 +0000</pubDate>
    <lastBuildDate>Wed, 10 Jun 2015 16:59:09 +0000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Day 2 | TDD. Success == Failure</title>
        <description>&lt;p&gt;Today was our first ‘proper’ day as Makers students. I feel like the day flew by, but when I look back at what we’ve actually achieved today I know the reason I am so tired now is that we did a hell of a lot. Here’s a bit of a summary of the day…&lt;/p&gt;

&lt;p&gt;The day started with a stand up in groups led by one of the coach engineers (who are what normal people would call teachers) where we discussed what we’d achieved yesterday, what things may be blocking our progression and what we were aiming to do next. This is the format of all our twice daily stand ups from now on. Since yesterday was quite a laid back introduction day, we mentioned things like that we’d got to know people better and had seen the value in and challenges of teamwork from our pseudo code and spaghetti-marshmallow exercises.&lt;/p&gt;

&lt;p&gt;The morning’s group talk focussed on TDD (Test Driven Development), then after a brief overview of the task we were quickly rushed off in our pairs to figure it out and complete it.&lt;/p&gt;

&lt;p&gt;I’m happy with how Kirsten and I completed the task. We worked through it in quite a considerate and methodical way, making sure to read everything and bear in mind the objectives of the task. The thing to remember about TDD and pairing is that it’s not necessarily about being the first to finish, it’s about taking into account any possible input and making sure you a) have tests in place that cover any type of input and b) that you buid your code up slowly making sure not to miss anything. That way you’ll end up with a truly robust program and hopefully won’t have to rewrite anything, just refactor it.&lt;/p&gt;

&lt;p&gt;TDD involves writing a test, running it on your code and watching it fail, then writing a line or two of code in your program to make that test pass. You then create a new test and repeat until, voila, you have a page full of tests and a program that does all kinds of cool stuff without a single bug. The incremental method can sometimes seems a bit trivial, for example if you want to write a program ‘fizzbuzz’ that outputs ‘fizz’ every time 3 is entered..&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Common approach:
Write code to output &#39;fizz&#39; when a multiple of 3 is entered
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
TDD approach: 
Write test to output &#39;fizz&#39; when 3 is entered. Test (test passes). Write test to output &#39;fizz&#39; when 9 is entered. Test (test fails). Rewrite original line of code to output &#39;fizz&#39; when a MUTIPLE of 3 is entered.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So, I hear you ask, why on earth would you want to do in 5 steps what you could easily do in 1? Isn’t the first method a lot quicker? Are you some sort of moron who doesn’t know their 3 times table? All valid questions.. But the point of the TDD approach is to capture any situation and make sure it is logically thought out. It’s not going to be long before we’re writing much larger programs which don’t have such obvious solutions, so it’s best to get in good habits now. Another example helps illustrate this..&lt;/p&gt;

&lt;p&gt;Task: Write a program that enters ‘fizz’ when a multiple of 3 is entered, ‘buzz’ when a multiple of 5 is entered and ‘fizzbuzz’ when a multiple of 15 is entered.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Possible common approach:
Write code to output &#39;fizz&#39; when a multiple of 3 is entered
Write code to output &#39;fizz&#39; when a multiple of 5 is entered
Write code to output &#39;fizzbuzz&#39; when a multiple of 15 is entered
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But there’s an error here… 15 is also a multiple of 3 and 5, so which output does it return?&lt;/p&gt;

&lt;p&gt;If the code had been written using TDD there would be a test case for 15 and a handy error message would be outputted letting you know why the build had failed (assuming you’d set up a descriptive and specific error message). You would then be able to examine the issue with your code and write it so that ALL tests passed at the same time. Only then you would be sure that your code was able to satisfy all three cases simultaneously.&lt;/p&gt;

&lt;p&gt;The real value was shown to us when we decided to do a test case for a string and found that all but the test we’d just set up - to test whether the input was not an integer - failed. This led us to realise that we needed to test for this first then exit the program if the input was proven to be something other than an integer. Otherwise the program would try and see what happened when a string was divided by 3… (Try it, it doesn’t make sense)&lt;/p&gt;

&lt;p&gt;Of course, the TDD relies on you writing your tests correctly (which is where your pair partner comes in handy!) and making sure you’ve covered all scenarios e.g. negative integers, zero, strings/floats/any other non-integer.&lt;/p&gt;

&lt;p&gt;So that’s TDD part 1 in a nutshell. I feel like I’ve gone off on one and written a very long post about it. Today also included some variations on the original challenge and a yoga session part way through the afternoon which really helped clear my mind and help me refocus. It’s amazing how much energy you can get from standing on one leg, arms outstretched and pretending to be a tree… But I’ll write a post about yoga another day as I’m going to make time to be a regular in those sessions :)&lt;/p&gt;

&lt;p&gt;I’m going to finish by giving a big shout out to my awesome first ever pairing partner Kirsten for her humour, patience, intelligence, down-to-earthedness and diligence. We rocked it today!&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jun 2015 21:46:34 +0000</pubDate>
        <link>http://natstar93.github.io//week1,/tdd,/pair/programming/2015/06/09/day-2.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week1,/tdd,/pair/programming/2015/06/09/day-2.html</guid>
        
        
        <category>week1,</category>
        
        <category>tdd,</category>
        
        <category>pair</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Day 1 | And we&#39;re off!</title>
        <description>&lt;p&gt;Today was the day I had been waiting for for… several weeks since I passed my interview. The good people at Makers decided to be nice to us and ease us in gently, which wasn’t what I was expecting considering that with the pre-course material they dropped us in the deep end (of a pool of gasoline, then set it on fire in week 3 and watched us suffer).&lt;/p&gt;

&lt;p&gt;After our free breakfast, the day started off with some getting-to-know-you games and teamwork exercises, then continued with some brilliant talks on how to do well at Makers and on how to look after your body and mind during the Hardest Thing You’ll Ever Do (TM).&lt;/p&gt;

&lt;p&gt;In a way the ‘body and mind’ talk sticks with me the most, because I wasn’t really expecting it. I’ve realised I’m going to have to eat well, exercise a bit and sleep well in order to get the most out of this experience. Makes sense really. Also, yoga and meditation have been suggested. I’ve never fully understood the benefits of either, but Dana (our wonderful Chief Joy Officer) explained that they are brilliant ways of facilitating the synapses in your brain to connect in new ways while your mind refocusses itself. At last, a scientific explanation that resonates with me. On top of that, they’ve been proven to energise you, reduce anxiety, ward off illnesses and many other cool health benefits. Sign me up for yoga 101 please!&lt;/p&gt;

&lt;p&gt;Another great thing Dana discussed was Mindfulness. No matter how hard you’re working or how much pressure you’re under, you must not lose track of this. Be courteous to others, and address your issues. A walk home today which involved seeing people in a rush pushing past each other and swearing at complete strangers, and seeing a man in Sainsbury’s shout at a timid cashier for suggesting he use the self-service tills (she wasn’t to know he was queuing at the kiosk so he could buy his fags) made me think there should be more of this in every institution or company…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nat x&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Jun 2015 21:46:34 +0000</pubDate>
        <link>http://natstar93.github.io//week1/2015/06/08/day-1.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week1/2015/06/08/day-1.html</guid>
        
        
        <category>week1</category>
        
      </item>
    
      <item>
        <title>Pre-course Summary | T minus 2 days!</title>
        <description>&lt;p&gt;Wow. That 4 weeks went really quickly! It scares me to think that we’re a quarter of the way through the journey in effect. Other statistics that scare me are: in 2 weeks I’ll be mentoring a newbie, in 6 weeks I’ll be a ‘senior maker’ and in 11 weeks I’ll be graduating (touch wood). And we haven’t even had our first day yet!&lt;/p&gt;

&lt;p&gt;The last four weeks have been spent learning how to effectively use Github &amp;amp; Bash and trying to cram as much Ruby knowledge into my head as possible via tutorials, documentation and a rather fun site called &lt;a href=&quot;http://www.codewars.com/about&quot;&gt;Codewars&lt;/a&gt;. The work really ramped up in the 3rd week and I’m still desperately trying to finish bits before we start on Monday. Admittedly half way through pre-course week 3 wasn’t exactly the best time to go off on holiday to Barcelona…&lt;/p&gt;

&lt;p&gt;In addition to the massive pile of pre-course work I’ve also been working on this blog quite a bit, which may not be apparent from the number of posts (or lack thereof). I decided to be adventurous and set it up using Jekyll and Github rather than a pre-made template (since I’m a developer, not a blogger, right?). Thanks to this wise decision I’ve had to solve a number of issues including getting the preview server to work (finally worked out you have to change the config file). I’ve also recently discovered that the css stylesheets don’t work exactly how I thought they would. I think you have to create a stylesheet separate from the main one if you want to add new classes in… So depending on when you view my blog it may look like the most beautiful thing you’ve ever seen, a polished turd still, or something in between.&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Jun 2015 08:46:34 +0000</pubDate>
        <link>http://natstar93.github.io//pre-course,/fear/2015/06/06/pre-course-summary.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//pre-course,/fear/2015/06/06/pre-course-summary.html</guid>
        
        
        <category>pre-course,</category>
        
        <category>fear</category>
        
      </item>
    
      <item>
        <title>The calm before the storm</title>
        <description>&lt;p&gt;Calm? There was no calm! I was expecting the weeks leading up to our first day to consist of a bit of light reading and a few challenges here and there, but 3 days into the pre-course we seem to be in the thick of it already, and I’m already scared of falling behind. But I am already loving it 😊 Here are my thoughts on the last couple of weeks.&lt;/p&gt;

&lt;p&gt;The moment I booked my interview at Makers I was presented with 12 hours worth of interview prep work, so I guess that was the point at which I said goodbye to my old life. After passing the interview Nikesh sent me some pre-pre-course material which kept me busy up until the pre-course meet up. At the time I thought it would save me some time later on, but I’ve now realised that the actual advantage is that I can delve deeper into the pre-course week 1 material and do a lot more research.&lt;/p&gt;

&lt;p&gt;It seems everything I’ve read and everyone I’ve spoken to has emphasised the same points really:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can say goodbye to your social life. Makers is your life now.&lt;/li&gt;
&lt;li&gt;This is one of the hardest things you&#39;ll ever do but it will be totally worth it!&lt;/li&gt;
&lt;li&gt;The staff and your fellow students will become a very important part of your life. They&#39;ll constantly be there with you for the next 16 weeks and will help you when you&#39;re close to giving up and crying in the corner.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve already learnt not to take this advice lightly, and that everyone, without exception, needs to take it seriously!&lt;/p&gt;

&lt;p&gt;Weeek 1 has been about command line/bash/shell scripting (I’m still getting to grips with the terminology). It’s been great fun learning how to use the commands and feeling like we’ve already started learning something fundamental that will no doubt come in useful to do even cooler things very soon.&lt;/p&gt;

&lt;p&gt;The course material is fantastic, you can tell it’s a tried and tested formula that’s been improved upon for each iteration (a new cohort starts doing this every 6 weeks). We were provided with tutorials and challenges that increase in difficulty by just the right amount. Often you’ll be presented with a question that you half know the answer to, which makes you refer back to the tutorial, really fully understand what you read initially and then apply that knowledge. I feel like I’m learning a lot and very quickly!&lt;/p&gt;

&lt;p&gt;I’ll sign off now by just saying…&lt;/p&gt;

&lt;p&gt;mkdir post-2
cd post-2
touch second-blog-post&lt;/p&gt;

&lt;p&gt;Ha ha I’m already speaking in a crazy secret language that only coders understand!&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Thu, 14 May 2015 21:46:34 +0000</pubDate>
        <link>http://natstar93.github.io//pre-course/2015/05/14/the-calm-before-the-storm.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//pre-course/2015/05/14/the-calm-before-the-storm.html</guid>
        
        
        <category>pre-course</category>
        
      </item>
    
  </channel>
</rss>
