<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Diary of a Developer</title>
    <description>A blog following my journey through Makers Academy and beyond...
</description>
    <link>http://natstar93.github.io//</link>
    <atom:link href="http://natstar93.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 23 Aug 2015 18:58:42 +0100</pubDate>
    <lastBuildDate>Sun, 23 Aug 2015 18:58:42 +0100</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Day 55 | Over so soon</title>
        <description>&lt;p&gt;I am feeling a mixture of emotions today. June 2015 have now officially graduated and I’m so immensely proud of what all the groups produced for their final projects and of the journey we had together. All six groups’ presentations went without a hitch and we proved that together we can create some amazing things and overcome all sorts of barriers to get there. Graduation night was a huge celebration of our achievements and of the fun we’ve had in the last 11 weeks with our cohort and the fantastic staff we’ve been working with.&lt;/p&gt;

&lt;p&gt;I haven’t blogged this week due to obvious time constraints, but our project really started to come together from Sunday onwards and in the end we somehow created with something bigger and better than we expected, and it looked beautiful too. At times I was so exhausted but it was all worth it in the end. After two frankly horrendous practice presentations on Friday, each team member put their all into making their part the best they could, and when we came off stage we were all riding a wave of elation. Seeing each member of your beloved cohort absolutely rock it too just puts the icing on the cake!&lt;/p&gt;

&lt;p&gt;These times are tinged with immense sadness too though. We had to say goodbye to Jack (aka Captain America) at the end of the night as he left for his flight home (accompanied by new best friends Christian and Simon, and Nikesh who is responsible for accepting him onto the course in the first place, so it felt very fitting that he was there to see him on his way too!). There will no doubt be a couple more tearful goodbyes in coming weeks too, which I’m not looking forward to. Jack’s departure signals the start of the disbandment of a very special group who were complete strangers 11 weeks ago but have now experienced so many laughs, lows and so much love for each other. I’ve had such an amazing summer and it’s so sad to know that this part of the journey has come to an ended so quickly. Some great friendships have been formed and I’m sure we’ll all keep in contact even when we’re all out in the world doing various awesome things.&lt;/p&gt;

&lt;p&gt;Due to the strength of the ever expanding Makers alumni network it seems a lot of alumni end up working together, collaborating on things and even forming startups, so in a way this is not the end. Most of us will be back in for hiring week next week too, which we’ve been warned is very hard work (just carrying on as normal then, really!). A record number of hiring companies are coming in to present to us with the aim of plucking us from the Makers Academy nest to become the awesome developers we now know we can be.&lt;/p&gt;

&lt;p&gt;If anyone reading this is weighing up whether to apply or not, I would say a massive, massive 100% YES! Quit your boring job, throw yourself into it and never look back. I would live it all again in a heartbeat.&lt;/p&gt;

&lt;p&gt;And so ends… the best summer of my life.&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Aug 2015 20:18:45 +0100</pubDate>
        <link>http://natstar93.github.io//week11/2015/08/21/day-55.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week11/2015/08/21/day-55.html</guid>
        
        
        <category>week11</category>
        
      </item>
    
      <item>
        <title>Day 50 | Final Project week 1 summary</title>
        <description>&lt;p&gt;It’s been a funny old week. The reason these blog posts are getting so few and far between is that I am spending every waking moment planning, coding, testing, researching or at the very least thinking about this project.&lt;/p&gt;

&lt;p&gt;We’ve had a number of setbacks already, all so different from the technical and version control issues experienced in previous projects. Team communication has not been fantastic for various reasons and a couple of other unexpected situations had to be dealt with. These elements are definitely so much harder than writing the actual code! However we’re not delivering work for a client here, we’re having a learning experience, so the best thing to do is to suck it up and do the best we can with whatever dire situation we’re presented with! The challenge is really to deal with whichever problems arise and deliver something that works despite them, not attempt to create the next Facebook in under two weeks. I find myself considering Dana’s attitude and general outlook a lot, as she really does have the right idea. In her yoga classes she talks a lot about being kind and forgiving with ourselves, and sort of encourages us to see positives rather than the negatives.&lt;/p&gt;

&lt;p&gt;All things considered, I think we have got a reasonable collection of work together so far. The MVP may be looking very tiny but a lot of really good research has been done and I feel like once I sit down and pair with someone on building and test-driving more of the essential functionality we’ll be fairly pleased with what we’ve got! Then it will be a case of adding a couple of the features we have on our rather long list, based on which we think are the most achievable or appropriate. I hope we have faced most of the technical issues now, but I’m mentally preparing for some long nights ahead if not!&lt;/p&gt;

&lt;p&gt;I’m enjoying Ionic a lot now. It uses Angular, which I love getting stuck into even when it means I spend my whole evening trying to bug fix. I learnt a lot about controllers and services this week, particularly that controllers operating across muliple views are not singletons, i.e. a new instance will be created for each view. So basically don’t try to share data using them like I did. That’s not really the role of an angular controller anyway, the job far better suited to a service (which is a singleton). We’ll try and smash out a test-driven working product by the end of the weekend and see what next week brings!&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Aug 2015 20:22:34 +0100</pubDate>
        <link>http://natstar93.github.io//week10/2015/08/14/day-50.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week10/2015/08/14/day-50.html</guid>
        
        
        <category>week10</category>
        
      </item>
    
      <item>
        <title>Day 47 | Issue central</title>
        <description>&lt;p&gt;All hell has broken loose. We’ve now started our final projects, in seemingly random groups of four (and one five) with widely varying competencies and levels of dedication.&lt;/p&gt;

&lt;p&gt;Day 1 was pretty much a disaster. Based on our initial discussions and research, the partial absence of one team member and a general lack of excitement about the project theme we decided to completely change our project idea. It was good that these misgivings were out in the open early, and the win for the day was that when the three of us left for the day we had an idea we were excited about working on. There was a lot of uncertainty about how many team members we would have and therefore how much be could plan to achieve. Plus if we were to be a four, would the fourth member be happy to work on the new idea? Not a good start.&lt;/p&gt;

&lt;p&gt;We decided to create a smartphone app for children that’s based around the idea of an &lt;a href=&quot;https://en.wikipedia.org/wiki/I-Spy_(Michelin)&quot;&gt;iSpy book&lt;/a&gt; for the digital youth of today. It’s aimed at tourists or daytrippers who have children with them and want to give them a fun, educational, game-based activity to do to prevent them getting cranky and ruining the whole outing. I think the idea has a lot of potential and it’s interesting to be creating something for a different target market and on a mobile platform too.&lt;/p&gt;

&lt;p&gt;Days 1-3 are research, prototyping and design days. We’re looking at Ionic and Cordova as our potential tools and I’ve been experimenting with a plugin that accesses the iPhone/Android camera. It’s quite satisfying when it works, but terrible to debug since you actually have to upload the app to your phone to test the camera function, so there goes the option of using your usual debugging tools e.g. the blimmin console. David and I have been debugging by outputting objects and values all over the shop, to try and keep a track of what’s doing what without a console. Natalia has used her Photoshop skills to create a design for the main view. We’re back to a four now but we’re a bit all over the place in terms of who’s doing what and crucially whether everyone is on the same page after our lengthy discussions. Some things we disuss in detail seem to emerge completely different than agreed. I’m nervous about whether we can pull this project off, but if we do it will be a very satisfying achievement.&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Aug 2015 00:44:05 +0100</pubDate>
        <link>http://natstar93.github.io//week10/2015/08/12/day-47.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week10/2015/08/12/day-47.html</guid>
        
        
        <category>week10</category>
        
      </item>
    
      <item>
        <title>Day 45 | Week 9 learning plan</title>
        <description>&lt;p&gt;&lt;strong&gt;Most Important Things I Learned:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Good communication in the most important thing in group project work&lt;br /&gt;
• It’s often better to implement a sub-optimum solution to a difficult problem (e.g. database associations) and then let it lead you to a better solution to the same problem&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Things I Struggled With The Most:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Keeping track of what the 3 different pairs were doing and working out whether the constituent parts of the product were going to work together&lt;br /&gt;
• Github.. merge conflicts, branches being accidentally merged into Master and rolling back commits&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Changes I Plan to Make Next Week:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Make sure everyone is clear on the Git process from day 1, and is using Waffle in the correct way. Ask for guidance if things like pull requests not closing the right issues occur again and document the process.&lt;br /&gt;
• Regular stand ups at the same time every day. Nominating a leader for each stand up so they are more structured and useful&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other Experiences or General Feedback This Week:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Looking forward to final projects and hoping we can make something awesome!&lt;br /&gt;
• It was great having a much needed no-homework weekend! Thanks :) Think it’s a good idea to have this before we immerse ourselves in final projects.&lt;br /&gt;
• I’ve decided to write more ‘how to’ blog posts as they are proving useful for myself and other to refer back to&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Aug 2015 12:21:23 +0100</pubDate>
        <link>http://natstar93.github.io//week9/2015/08/07/day-45.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week9/2015/08/07/day-45.html</guid>
        
        
        <category>week9</category>
        
      </item>
    
      <item>
        <title>Day 44 | I actually need to write a todo list...</title>
        <description>&lt;p&gt;Today we’ve been working on the Pairing Matrix project again, with all teams operating with skeleton staff. In a way it’s easier with less people to cause merge conflicts, but it meant we couldn’t move ahead with any extra features. We implemented a blacklist, and started implementing login since it became very necessary to the Blacklisting feature we were creating.&lt;/p&gt;

&lt;p&gt;I’ve been researching final projects and am about to vote for three options I would like to work on, which will allow the coaches to organise us into groups. I also seem to have a backlog of little things I want to do, and am hoping to make a start this weekend since we have no homework for the first time in 12 weeks! I’ve also declared myself homework-free to family and friends though, so we’ll see how much time I actually have..&lt;/p&gt;

&lt;p&gt;Here’s the list as it currently stands:&lt;/p&gt;

&lt;p&gt;• Do a MongoDB tutorial&lt;br /&gt;
• Create a full MEAN stack app (MongoDB, Express, Angular &amp;amp; Node)&lt;br /&gt;
• Create or improve READMEs for a few recent projects&lt;br /&gt;
• Get Amazon web services image uploading working&lt;br /&gt;
• Push projects incorporating the above to Heroku&lt;br /&gt;
• Pretty up some previous projects with CSS. Go easy on the Bootstrap and all out on the design and UX&lt;br /&gt;
• Read Ruby &amp;amp; JS books&lt;br /&gt;
• Read OOP books&lt;br /&gt;
• Revisit and improve earlier weeks’ projects&lt;/p&gt;

&lt;p&gt;Well.. that’s enough to keep me going for quite a while I think!&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Aug 2015 23:51:39 +0100</pubDate>
        <link>http://natstar93.github.io//week9/2015/08/06/day-44.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week9/2015/08/06/day-44.html</guid>
        
        
        <category>week9</category>
        
      </item>
    
      <item>
        <title>Day 43 | Penultimate Projects</title>
        <description>&lt;p&gt;So.. this week we’ve been working in groups on a ‘Pairing matrix website’ project. I think one of the reasons for this is so that the coaches can point and go ‘See, it’s actually bloody hard to organise you guys into pairs every day!’. The main point though, is to get everyone working in teams to create something big and complicated, and get us used to merge conflicts and general project organisation.&lt;/p&gt;

&lt;p&gt;I’ve got a pretty sweet group who haven’t fallen out yet, so that’s one win. I’ve now paired with everyone in the group somehow, and worked on database models and associations, pairing algorithms and styling. I think I just need to contribute to the controllers now and that’s all bases covered! We spent a lot of day two fretting over how to populate the database without pretty much doubling the entries we needed to do before coach Sam (aka English Jack Black) scaffolded our stand up. He told us we should go with a non-optimum solution that works and let it lead us to to a better way of doing it. So one of our database tables now looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pairing_matrix_development=# SELECT * FROM pairs;
 id |      created_at     |      updated_at     | student_id | partner_id 
----+---------------------+---------------------+------------+------------
 23 | 2015-08-05 14:18:32 | 2015-08-05 14:18:32 |         35 |         34
 24 | 2015-08-05 14:18:32 | 2015-08-05 14:18:32 |         34 |         35
 25 | 2015-08-05 14:18:32 | 2015-08-05 14:18:32 |         37 |         36
 26 | 2015-08-05 14:18:32 | 2015-08-05 14:18:32 |         36 |         37

(Note that partners are students and use the same model)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There must be a better way of doing this, but for now it will do. What we really want is two entries rather than four, and we want to make a single query to the database to get a pair out.&lt;/p&gt;

&lt;p&gt;I’ve just pushed something to Github that’s causing all sorts of problems so further work will have to wait til tomorrow now. I’m a bit scared the development branch is not correct, so that will be the first priority tomorrow. It’s a bit scary having 3 pairs working off the same repository, since any issues or conflicts will be picked up by anyone pulling down from it. Ahhh.&lt;/p&gt;

&lt;p&gt;Another blimmin tube strike is raining on our parade, so our pretty-good-so-far communication is going to be tested tomorrow. But hey, working remotely is a great learning experience. Throw in some Git issues and debates about how features should function and we’ve got a recipe for a lot of fun…&lt;/p&gt;

&lt;p&gt;I really think the most important learning from this is communication. It’s great to rehearse what we now know and learn some new bits and bobs on the way, but none of that matters if your team are working in silos or misunderstanding what they need to deliver. Pairing is also very important. You really get a lot more done if someone is there to validate what you’re doing or picking up on silly little errors. We’ve also picked up new tools such as Waffle, a kanban which integrates all your Github issues and pull requests. Then it automatically moves cards around, to the delighted claps of a team who’ve clearly spent too much of their summer locked away in a building on Commercial Street…&lt;/p&gt;

&lt;p&gt;Final projects start on Monday. How scary!&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Aug 2015 23:05:39 +0100</pubDate>
        <link>http://natstar93.github.io//week9/2015/08/05/day-43.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week9/2015/08/05/day-43.html</guid>
        
        
        <category>week9</category>
        
      </item>
    
      <item>
        <title>Day 41 | Many things todo</title>
        <description>&lt;p&gt;This weekend I made a super cool todo list app. It does everything it’s supposed to do and more, but I’m slightly worried about how big my HTML page is now. It’s stuffed full of angular directives and looks like Bootstrap has thrown up on it. I think my Makers training has taught alarm bells to ring in my head when something starts to look busy and complex, so I’m not sure if what I’ve done is correct. Technically the logic in the HTML page is all display logic, but I’m looking forward to having a coach review it so they can tell me if I need to move certain things into the controller.&lt;/p&gt;

&lt;p&gt;Having said all that, it’s got a few nifty features such as inline editing and buttons that become disabled when they’re not needed. Plus angular form validation is pretty neat too, even it introduces more mess into the HTML page.&lt;/p&gt;

&lt;p&gt;Here’s how the inline editing works:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;td class=&quot;col-md-7&quot;&amp;gt;
  &amp;lt;span class=&quot;col-md-12&quot; ng-hide=&quot;editorEnabled&quot;&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;input class=&quot;col-md-12 edit-box&quot; ng-show=&quot;editorEnabled&quot; 
  ng-model=&quot;task.description&quot;&amp;gt;
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A button toggles editorEnabled’s boolean value, which controls whether the task description is shown, or an input field that allows the task description to be updated using ng-model. In case you’re wondering how the buttons work…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;td class=&quot;col-md-4&quot;&amp;gt;
  &amp;lt;button type=&quot;button&quot; id=&quot;editing&quot; ng-disabled=&quot;editorEnabled&quot; 
  ng-click=&quot;editorEnabled=!editorEnabled&quot; 
  class=&quot;btn btn-primary edit-task-btn&quot;&amp;gt;
    &amp;lt;span class=&quot;glyphicon glyphicon-pencil&quot;&amp;gt;&amp;lt;/span&amp;gt; Edit
  &amp;lt;/button&amp;gt;
  &amp;lt;button type=&quot;button&quot; id=&quot;editing&quot; ng-show=&quot;editorEnabled&quot; 
  ng-click=&quot;editorEnabled=!editorEnabled&quot; 
  class=&quot;btn btn-success done-editing-btn&quot;&amp;gt;Done&amp;lt;/button&amp;gt;
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The edit button sets the value of editorEnabled, and becomes disabled if editorEnabled is true. The ‘Done’ button only appears when editorEnabled is true.&lt;/p&gt;

&lt;p&gt;I tried to put a setPristine method in the task adding method in my controller, but all attempts to do this failed. This meant when a task was added and the field reset to blank, since the form was still ‘dirty’my error handling allowed a ‘Description is required’ message to show. So into the HTML it went, and now everything is working fine.&lt;/p&gt;

&lt;p&gt;Here’s what I did to fix the bug:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;button class=&quot;btn btn-success add-task-btn&quot; 
ng-click=&quot;addForm.taskDescription.$setPristine()&quot;&amp;gt;Add task&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bring on the code review…&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Aug 2015 21:44:44 +0100</pubDate>
        <link>http://natstar93.github.io//week9/2015/08/03/day-41.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week9/2015/08/03/day-41.html</guid>
        
        
        <category>week9</category>
        
      </item>
    
      <item>
        <title>Day 41 | Many things todo</title>
        <description>&lt;p&gt;This weekend I made a super cool todo list app. It does everything it’s supposed to do and more, but I’m slightly worried about how big my HTML page is now. It’s stuffed full of angular directives and looks like Bootstrap has thrown up on it. I think my Makers training has taught alarm bells to ring in my head when something starts to look busy and complex, so I’m not sure if what I’ve done is correct. Technically the logic in the HTML page is all display logic, but I’m looking forward to having a coach review it so they can tell me if I need to move certain things into the controller.&lt;/p&gt;

&lt;p&gt;Having said all that, it’s got a few nifty features such as inline editing and buttons that become disabled when they’re not needed. Plus angular form validation is pretty neat too, even it introduces more mess into the HTML page.&lt;/p&gt;

&lt;p&gt;Here’s how the inline editing works:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;td class=&quot;col-md-7&quot;&amp;gt;
  &amp;lt;span class=&quot;col-md-12&quot; ng-hide=&quot;editorEnabled&quot;&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;input class=&quot;col-md-12 edit-box&quot; ng-show=&quot;editorEnabled&quot; ng-model=&quot;task.description&quot;&amp;gt;
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A button toggles editorEnabled’s boolean value, which controls whether the task description is shown, or an input field that allows the task description to be updated using ng-model. In case you’re wondering how the buttons work…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;td class=&quot;col-md-4&quot;&amp;gt;
  &amp;lt;button type=&quot;button&quot; id=&quot;editing&quot; ng-disabled=&quot;editorEnabled&quot; ng-click=&quot;editorEnabled=!editorEnabled&quot; class=&quot;btn btn-primary edit-task-btn&quot;&amp;gt;
    &amp;lt;span class=&quot;glyphicon glyphicon-pencil&quot;&amp;gt;&amp;lt;/span&amp;gt; Edit
  &amp;lt;/button&amp;gt;
  &amp;lt;button type=&quot;button&quot; id=&quot;editing&quot; ng-show=&quot;editorEnabled&quot; ng-click=&quot;editorEnabled=!editorEnabled&quot; class=&quot;btn btn-success done-editing-btn&quot;&amp;gt;Done&amp;lt;/button&amp;gt;
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The edit button sets the value of editorEnabled, and becomes disabled if editorEnabled is true. The ‘Done’ button only appears when editorEnabled is true.&lt;/p&gt;

&lt;p&gt;I tried to put a setPristine method in the task adding method in my controller, but all attempts to do this failed. This meant when a task was added and the field reset to blank, since the form was still ‘dirty’my error handling allowed a ‘Description is required’ message to show. So into the HTML it went, and now everything is working fine.&lt;/p&gt;

&lt;p&gt;Here’s what I did to fix the bug:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;button class=&quot;btn btn-success add-task-btn&quot; ng-click=&quot;addForm.taskDescription.$setPristine()&quot;&amp;gt;Add task&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bring on the code review…&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Aug 2015 21:44:44 +0100</pubDate>
        <link>http://natstar93.github.io//week9/2015/08/03/day-41.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week9/2015/08/03/day-41.html</guid>
        
        
        <category>week9</category>
        
      </item>
    
      <item>
        <title>Day 40 | Week 8 learning plan</title>
        <description>&lt;p&gt;&lt;strong&gt;Most Important Things I Learned:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Protractor and karma testing&lt;br /&gt;
• Angular setup&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Things I Struggled With The Most:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Server setup issues&lt;br /&gt;
• Making a second API call to Github to retrieve number of repos for each user displayed in search results. I really don’t get how to do this and will have to spend some time looking at Stefan’s solution. Would have much preferred to be able to work it out on my own but ran out of time&lt;br /&gt;
• Communicating Github access token to Heroku-hosted app securely&lt;br /&gt;
• Working out what tests to write..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Changes I Plan to Make Next Week:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Try and get in a makerthon group who are using Express&lt;br /&gt;
• Read JS books to get to grips with some of the conecpts we looked at this week&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other Experiences or General Feedback This Week:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• A confusing but good week! I am happy we’ve studied concepts such as factories/services, promises and more on dependency injection, but I don’t feel 100% comfortable with them yet, hence wanting to read more JavaScript books&lt;br /&gt;
• ng-hide and ng-show didn’t come up. Presumably this is because we were meant to find them out on our own but I think they’re useful for the weekend homework&lt;br /&gt;
• Sad that the hardcore learning part of the course is pretty much over now, but looking forward to projects and hopefully creating some really awesome things!&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Fri, 31 Jul 2015 17:38:29 +0100</pubDate>
        <link>http://natstar93.github.io//week8/2015/07/31/day-40.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week8/2015/07/31/day-40.html</guid>
        
        
        <category>week8</category>
        
      </item>
    
      <item>
        <title>Day 39 | Testing times</title>
        <description>&lt;p&gt;My brain is hurting again. I’ve spent a lot of today debugging server setup issues and getting in the middle of a debate about Rack vs Sinatra as a method of serving up Single Page Applications. In the middle of all this my server file went missing and made me look like an idiot, and I had to follow a trail of breadcrumbs in the shape of error messages which told me I hadn’t done a load of obvious things. Not bundling my Gemfile before pushing to Heroku, and trying to use a server without a config file spring to mind as moments I’d rather forget (but have immortalised in this blog for some reason anyway).&lt;/p&gt;

&lt;p&gt;I’ve been using protractor for testing, and getting totally confused about what I’m meant to be stubbing and what I actually need to test. One of those days when you suddenly realise you’re trying to test that something is itself, and that maybe you’re overdoing it on the testing efforts.&lt;/p&gt;

&lt;p&gt;In short, anything that could go wrong went wrong today.&lt;/p&gt;

&lt;p&gt;Despite a multitude of setbacks, my little app is now finally on Heroku. It’s really not much to look at so far, but if you fancy dynamically searching Github using a funny little app I made, &lt;a href=&quot;https://nat-gihub-profiles.herokuapp.com/&quot; target=&quot;_blank&quot;&gt;do feel free&lt;/a&gt;. Tomorrow will hopefully result in some more interesting data being presented and maybe some CSS so it looks like a real thing.&lt;/p&gt;

&lt;p&gt;Here are some pointers for anyone deploying a simple Rack app:&lt;/p&gt;

&lt;p&gt;• Make sure you’ve created a Gemfile including your source, Ruby version and the ‘rack’ gem&lt;br /&gt;
• Bundle it, otherwise you won’t have a Gemfile.lock&lt;br /&gt;
• Shove your index, js folder, css folder and anything else your app needs in a ‘public’ folder&lt;br /&gt;
• Move your bower_components directory to public/bower_components&lt;br /&gt;
• Create a .bowerrc file in the top level of your application, and add the following text to it:  { “directory”: “public/bower_components” }&lt;br /&gt;
• Add a buildpack to your Heroku env variables like so: heroku config:add BUILDPACK_URL=git://github.com/qnyp/heroku-buildpack-ruby-bower.git#run-bower&lt;br /&gt;
• Make sure your node_components are .gitignored&lt;br /&gt;
• Make sure your config file looks something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;use Rack::Static,
  :urls =&amp;gt; [&quot;/images&quot;, &quot;/js&quot;, &quot;/css&quot;, &#39;/bower_components&#39;],
  :root =&amp;gt; &quot;public&quot;

run lambda { |env|
  [
    200,
    {
      &#39;Content-Type&#39;  =&amp;gt; &#39;text/html&#39;,
      &#39;Cache-Control&#39; =&amp;gt; &#39;public, max-age=86400&#39;
    },
    File.open(&#39;public/index.html&#39;, File::RDONLY)
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;• Note that you may need to amend the urls values array to include any other folders you need&lt;br /&gt;
• Your server will be looking at the root (public, in the example above) for additional files. Therefore you need to make sure the references at the top of your html file include a forward slash at the front &lt;code&gt;&amp;lt;script src=&quot;/js/app.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;br /&gt;
• Type &lt;code&gt;heroku create nats-awesome-app&lt;/code&gt;&lt;br /&gt;
• &lt;code&gt;heroku push origin master&lt;/code&gt;&lt;br /&gt;
• Junebugs, for our github-profiles challenge, if you’re using an API access token you’ll need to remove it from the .gitignore list. This doesn’t seem like a very satisfactory solution, but we were unable to find a good way of supplying a secret token to the front end. The best we could do was branch the repo for the heroku push and push to heroku using &lt;code&gt;git push heroku yourbranch:master&lt;/code&gt;. Do be aware that when switching between branches your .gitignored access token may disappear.&lt;/p&gt;

&lt;p&gt;Nat x&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jul 2015 23:11:29 +0100</pubDate>
        <link>http://natstar93.github.io//week8/2015/07/30/day-39.html</link>
        <guid isPermaLink="true">http://natstar93.github.io//week8/2015/07/30/day-39.html</guid>
        
        
        <category>week8</category>
        
      </item>
    
  </channel>
</rss>
